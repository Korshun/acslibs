function bool IsPlayer(void)
{
	return PlayerNumber() >= 0;
}

function str PlayerName(int num)
{
	return StrParam(n:(num+1));
}

function bool PlayerIsConnected(int player)
{
	return PlayerInGame(player) || PlayerIsSpectator(player);
}

function bool SetActivatorToPlayer2(int player)
{
	if (SetActviatorToPlayer(player))
		return true;
		
	if (player >= 0 && player < 8)
		return false;
		
	return SetActivator(0, AAPTR_PLAYER1<<player);
}


function int BotCount(void)
{
	int count = 0;
	for (int i = 0; i < MAX_PLAYERS; i++)
		if (PlayerIsBot(i))
			count++;
	return count;
}

function int ClientCount(void)
{
	int count = 0;
	for (int i = 0; i < MAX_PLAYERS; i++)
		if (PlayerIsConnected(i))
			count++;
	return count;
}

function int SpectatorCount(void)
{
	int count = 0;
	for (int i = 0; i < MAX_PLAYERS; i++)
		if (PlayerIsSpectator(i))
			count++;
	return count;
}


int ACSUtils_Players[MAX_PLAYERS];

function int PickRandomClient(void)
{
	int numPlayers = 0;
	for (int i = 0; i < MAX_PLAYERS; i++)
		if (PlayerIsConnected(i))
			ACSUtils_Players[numPlayers++] = i;
	
	if (numPlayers == 0)
		return -1;
	
	return ACSUtils_Players[Random(0, numPlayers - 1)];
}

function int PickRandomPlayer(void)
{
	int numPlayers = 0;
	for (int i = 0; i < MAX_PLAYERS; i++)
		if (PlayerInGame(i))
			ACSUtils_Players[numPlayers++] = i;
	
	if (numPlayers == 0)
		return -1;
	
	return ACSUtils_Players[Random(0, numPlayers - 1)];
}

function int PickRandomSpectator(void)
{
	int numPlayers = 0;
	for (int i = 0; i < MAX_PLAYERS; i++)
		if (PlayerIsSpectator(i))
			ACSUtils_Players[numPlayers++] = i;
	
	if (numPlayers == 0)
		return -1;
	
	return ACSUtils_Players[Random(0, numPlayers - 1)];
}

function int PickRandomBot(void)
{
	int numPlayers = 0;
	for (int i = 0; i < MAX_PLAYERS; i++)
		if (PlayerIsBot(i))
			ACSUtils_Players[numPlayers++] = i;
	
	if (numPlayers == 0)
		return -1;
	
	return ACSUtils_Players[Random(0, numPlayers - 1)];
}
