@fixed CursorX = 320.0;
@fixed CursorY = 240.0;

@fixed CursorPrevX = 320.0;
@fixed CursorPrevY = 240.0;

@fixed CursorMotionX = 0;
@fixed CursorMotionY = 0;

@fixed CursorSpeedX = 1.0;
@fixed CursorSpeedY = 1.0;

@fixed CursorAreaWidth = 640.0;
@fixed CursorAreaHeight = 480.0;

@bool CursorWrapX = false;
@bool CursorWrapY = false;
	

function fixed CursorX(void)
{
	return $CursorX;
}

function fixed CursorY(void)
{
	return $CursorY;
}

function fixed CursorDeltaX(void)
{
	if ($CursorWrapX)
		return CursorMotionX();
	return $CursorX - $CursorPrevX;
}
function fixed CursorDeltaY(void)
{
	if ($CursorWrapY)
		return CursorMotionY();
	return $CursorY - $CursorPrevY;
}

function fixed CursorMotionX(void)
{
	return $CursorMotionX;
}

function fixed CursorMotionY(void)
{
	return $CursorMotionY;
}

function void SetCursorSpeed(fixed speed)
{
	$CursorSpeedX = speed;
	$CursorSpeedY = speed;
}

function void SetCursorSpeedX(fixed speed)
{
	$CursorSpeedX = speed;
}

function void SetCursorSpeedY(fixed speed)
{
	$CursorSpeedY = speed;
}

function void SetCursorPosition(fixed x, fixed y)
{
	$CursorX = x;
	$CursorY = y;
}

function void CenterCursor(void)
{
	SetCursorPosition($CursorAreaWidth / 2, $CursorAreaHeight / 2);
}

function void EnableCursorWrap(bool enable)
{
	$CursorWrapX = enable;
	$CursorWrapY = enable;
}

function void EnableCursorWrapX(bool enable)
{
	$CursorWrapX = enable;
}

function void EnableCursorWrapY(bool enable)
{
	$CursorWrapY = enable;
}

function void ACSUtils_ClampCursor(void)
{
	fixed width = $CursorAreaWidth;
	fixed height = $CursorAreaHeight;
	
	fixed borderX = HudBorderXFor(width);
	fixed borderY = HudBorderYFor(height);
	
	$CursorX += borderX;
	$CursorY += borderY;
	
	width +=  fixed(int(borderX) * 2);
	height += fixed(int(borderY) * 2);

	if ($CursorWrapX)
		$CursorX = mod($CursorX, width);
	else
		$CursorX = clamp($CursorX, 0, width);
	
	if ($CursorWrapY)
		$CursorY = mod($CursorY, height);
	else
		$CursorY = clamp($CursorY, 0, height);
		
	$CursorX -= borderX;
	$CursorY -= borderY;
}

function void SetCursorArea(fixed width, fixed height)
{
	if (width <= 0.0)
		ACSUtils_ProgramError(StrParam(s:"Cursor area width set to ", f:width));
	if (height <= 0.0)
		ACSUtils_ProgramError(StrParam(s:"Cursor area height set to ", f:height));
	
	$CursorX = FixedMul($CursorX, FixedDiv(width, $CursorAreaWidth));
	$CursorY = FixedMul($CursorY, FixedDiv(height, $CursorAreaHeight));
	$CursorPrevX = FixedMul($CursorPrevX, FixedDiv(width, $CursorAreaWidth));
	$CursorPrevY = FixedMul($CursorPrevY, FixedDiv(height, $CursorAreaHeight));
	$CursorMotionX = FixedMul($CursorMotionX, FixedDiv(width, $CursorAreaWidth));
	$CursorMotionY = FixedMul($CursorMotionY, FixedDiv(height, $CursorAreaHeight));

	$CursorAreaWidth = width;
	$CursorAreaHeight = height;
}

function void UpdateCursor(void)
{
	$CursorPrevX = $CursorX;
	$CursorPrevY = $CursorY;

	fixed sensitivity = a_GetCVarFixed("mouse_sensitivity");
	fixed speedX = FixedDiv($CursorSpeedX, FixedMul(a_GetCVarFixed("m_yaw"), sensitivity));
	fixed speedY = FixedDiv($CursorSpeedY, FixedMul(a_GetCVarFixed("m_pitch"), sensitivity));
	
	speedX = fixed(int(FixedMul(fixed(int(speedX) * 2), $CursorAreaWidth)) / 64000);
	speedY = fixed(int(FixedMul(fixed(int(speedY) * 2), $CursorAreaHeight)) / 32000);

	fixed dx = fixed(-GetPlayerInput(ConsolePlayerNumber(), INPUT_YAW)   * int(speedX));
    fixed dy = fixed(-GetPlayerInput(ConsolePlayerNumber(), INPUT_PITCH) * int(speedY));

	if (GetCVar("invertmouse"))
        dy = -dy;
		
	$CursorMotionX = dx;
	$CursorMotionY = dy;
	$CursorX += dx;
	$CursorY += dy;
	ACSUtils_ClampCursor();
}
