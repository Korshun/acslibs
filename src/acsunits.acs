// Angles

function int deg2ang(int degrees)
{
	return FixedDiv(degrees, 360.0);
}

function int rad2ang(int radians)
{
	return FixedDiv(radians, TAU);
}

function int ang2deg(int angle)
{
	return FixedMul(angle, 360.0);
}

function int ang2rad(int angle)
{
	return FixedMul(angle, TAU);
}

function int deg2rad(int degrees)
{
	return FixedDiv(degrees, 57.29577951308232);
}

function int rad2deg(int radians)
{
	return FixedMul(radians, 57.29577951308232);
}


// Gravity

function int GetGravityG(void)
{
	int sv_gravity = GetCVar("sv_gravity");
	if (sv_gravity > SHORT_MAX || sv_gravity < SHORT_MIN)
		return IntDiv(sv_gravity, 800);
	return FixedDiv(a_GetCVarFixed("sv_gravity"), 800.0);
}

function void SetGravityG(int gravity)
{
	SetGravity(FixedMul(gravity, 800.0));
}

function int grav2accel(int grav)
{
	return FixedDiv(grav, 800.0);
}

function int accel2grav(int accel)
{
	return FixedMul(accel, 800.0);
}

function int height2jumpz(int height, int gravity)
{
	return FixedSqrt(2 * FixedMul(height, gravity));
}

function int jumpz2height(int jumpz, int gravity)
{
	return FixedDiv(FixedMul(jumpz, jumpz), gravity) / 2;
}
