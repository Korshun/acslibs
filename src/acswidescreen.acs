// Most of this file is written by carlcyber and bagheadspidey.
// See http://forum.zdoom.org/viewtopic.php?f=3&t=35383
// Interface 

// BCC type
@const fixed ASPECT_4_3 = fixed(int(4.0) / 3);
@const fixed ASPECT_5_4 = 1.25;
@const fixed ASPECT_16_9 = fixed(int(16.0) / 9);
@const fixed ASPECT_16_10 = 1.6;
@const fixed ASPECT_17_10 = 1.7;

function fixed GetAspectRatio(void)
{
	if (!IsClient())
	{
		ACSUtils_ProgramError("GetAspectRatio() called serverside. Assuming 4:3.");
		return ASPECT_4_3;
	}

	raw width = GetCVar("vid_defwidth");
	raw height = GetCVar("vid_defheight");
	raw nowidescreen = GetCVar("vid_nowidescreen");
	raw tft = GetCVar("vid_tft");
	raw aspect = GetCVar("vid_aspect");
	switch(aspect)
	{
		case 1:	return ASPECT_16_9;
		case 2:	return ASPECT_16_10;
		case 3:	return ASPECT_4_3;
		case 4:	return ASPECT_5_4;
		case 5: return ASPECT_17_10;
	}
	if(nowidescreen)
	{
		if(!tft)
			return ASPECT_4_3;
		if(height * ASPECT_5_4 == width<<16)
			return ASPECT_5_4;
		else
			return ASPECT_4_3;
	}
	if(abs((abs(height * ASPECT_16_9)>>16) - width) < 10)
	{
		return ASPECT_16_9;
	}
	if(abs((abs(height * ASPECT_17_10)>>16) - width) < 10)
	{
		return ASPECT_17_10;
	}
	if(abs((abs(height * ASPECT_16_10)>>16) - width) < 60)
	{
		if((width == 320 && height == 200) || (width == 640 && height == 400))
			return ASPECT_4_3;
		return ASPECT_16_10;
	}
	if((height * ASPECT_5_4)>>16 == width && tft)
	{
		return ASPECT_5_4;
	}
	return ASPECT_4_3;
}

/*
 * Gets the borders of the specified HUD size.
 * [NOTE]:
 *     1. The HUD borders are written in HudLeft, HudRight, HudTop, and HudBottom variables.
 *     2. Status bar and small screen blocks (screenblocks < 11) are not supported.
 * [Credit]
 *    Original HUD edge positioning functions by bagheadspidey
 */

function fixed HudBorderXFor(fixed width)
{
	fixed ar = GetAspectRatio();
	switch (ar)
	{
		case ASPECT_4_3: return 0.0;
		case ASPECT_16_9: return fixed(int(width) / 6);
		case ASPECT_16_10: return fixed(int(width) / 10);
		case ASPECT_17_10: return fixed(int(width) / 80);
	}
	return 0.0;
}

function fixed HudBorderYFor(fixed height)
{
	if (GetAspectRatio() == ASPECT_5_4)
		return fixed(int(height) / 30);
	return 0.0;
}

function fixed HudLeftFor(fixed width)
{
	return -HudBorderXFor(width);
}

function fixed HudRightFor(fixed width)
{
	return width + HudBorderXFor(width);
}

function fixed HudTopFor(fixed height)
{
	return -HudBorderYFor(height);
}

function fixed HudBottomFor(fixed height)
{
	return height + HudBorderYFor(height);
}
